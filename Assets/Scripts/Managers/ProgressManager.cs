using UnityEngine;
using System.Collections;

public static class ProgressManager {

    /* CODE AUTO GENERATED BY LEVEL CREATOR SHEET
    *      generated on: [TODAY'S DATE]
    */
    // INITIALIZE MAP ARRAY 
    public static int[][][] levelMap = new int[4][][] {
            /* LEVEL 1 CODE */
            new int[39][] { Br(4, 16), Br(6, 16), Br(8, 16), Br(10, 16), Br(12, 16), Br(14, 16, MultiBrick.GREEN), Br(16, 16, MultiBrick.GREEN), Br(18, 16, MultiBrick.GREEN), Br(20, 16), Br(22, 16), Br(24, 16), Br(26, 16), Br(28, 16), Br(4, 15), Br(6, 15), Br(8, 15), Br(10, 15), Br(12, 15), Br(14, 15), Br(16, 15), Br(18, 15), Br(20, 15), Br(22, 15), Br(24, 15), Br(26, 15), Br(28, 15), Br(4, 14), Br(6, 14), Br(8, 14), Br(10, 14), Br(12, 14), Br(14, 14), Br(16, 14), Br(18, 14), Br(20, 14), Br(22, 14), Br(24, 14), Br(26, 14), Br(28, 14) },
            /* LEVEL 2 CODE */
            new int[55][] { Br(7, 20, MultiBrick.BLUE), Br(9, 20, MultiBrick.BLUE), Br(23, 20, MultiBrick.BLUE), Br(25, 20, MultiBrick.BLUE), Br(6, 19, MultiBrick.BLUE), Br(8, 19, MultiBrick.BLUE), Br(10, 19, MultiBrick.BLUE), Br(22, 19, MultiBrick.BLUE), Br(24, 19, MultiBrick.BLUE), Br(26, 19, MultiBrick.BLUE), Br(7, 15, MultiBrick.GREEN), Br(9, 15, MultiBrick.GREEN), Br(11, 15, MultiBrick.GREEN), Br(13, 15, MultiBrick.GREEN), Br(19, 15, MultiBrick.GREEN), Br(21, 15, MultiBrick.GREEN), Br(23, 15, MultiBrick.GREEN), Br(25, 15, MultiBrick.GREEN), Br(4, 14, MultiBrick.GREEN), Br(6, 14, MultiBrick.GREEN), Br(8, 14, MultiBrick.GREEN), Br(10, 14, MultiBrick.GREEN), Br(12, 14, MultiBrick.GREEN), Br(14, 14, MultiBrick.GREEN), Br(16, 14, MultiBrick.GREEN), Br(18, 14, MultiBrick.GREEN), Br(20, 14, MultiBrick.GREEN), Br(22, 14, MultiBrick.GREEN), Br(24, 14, MultiBrick.GREEN), Br(26, 14, MultiBrick.GREEN), Br(28, 14, MultiBrick.GREEN), Br(8, 11), Br(10, 11), Br(14, 11), Br(16, 11), Br(20, 11), Br(22, 11), Br(26, 11), Br(28, 11), Br(5, 10), Br(7, 10), Br(9, 10), Br(11, 10), Br(13, 10), Br(15, 10), Br(17, 10), Br(19, 10), Br(21, 10), Br(23, 10), Br(25, 10), Br(27, 10), Br(6, 9), Br(12, 9), Br(18, 9), Br(24, 9) },
            /* LEVEL 3 CODE */
            new int[61][] { Br(4, 21, MultiBrick.BLUE), Br(16, 21, MultiBrick.BLUE), Br(28, 21, MultiBrick.BLUE), Br(3, 20, MultiBrick.BLUE), Br(5, 20, MultiBrick.BLUE), Br(15, 20, MultiBrick.BLUE), Br(17, 20, MultiBrick.BLUE), Br(27, 20, MultiBrick.BLUE), Br(29, 20, MultiBrick.BLUE), Br(2, 19, MultiBrick.BLUE), Br(4, 19, MultiBrick.BLUE), Br(6, 19, MultiBrick.BLUE), Br(10, 19, MultiBrick.GREY), Br(14, 19, MultiBrick.BLUE), Br(16, 19, MultiBrick.BLUE), Br(18, 19, MultiBrick.BLUE), Br(22, 19, MultiBrick.GREY), Br(26, 19, MultiBrick.BLUE), Br(28, 19, MultiBrick.BLUE), Br(30, 19, MultiBrick.BLUE), Br(10, 16), Br(22, 16), Br(9, 15), Br(11, 15), Br(21, 15), Br(23, 15), Br(10, 14), Br(22, 14), Br(4, 12, MultiBrick.BLUE), Br(16, 12, MultiBrick.BLUE), Br(28, 12, MultiBrick.BLUE), Br(3, 11, MultiBrick.GREEN), Br(5, 11, MultiBrick.GREEN), Br(15, 11, MultiBrick.GREEN), Br(17, 11, MultiBrick.GREEN), Br(27, 11, MultiBrick.GREEN), Br(29, 11, MultiBrick.GREEN), Br(2, 10, MultiBrick.GREEN), Br(4, 10, MultiBrick.GREEN), Br(6, 10, MultiBrick.GREEN), Br(14, 10, MultiBrick.GREEN), Br(16, 10, MultiBrick.GREEN), Br(18, 10, MultiBrick.GREEN), Br(26, 10, MultiBrick.GREEN), Br(28, 10, MultiBrick.GREEN), Br(30, 10, MultiBrick.GREEN), Br(3, 9), Br(5, 9), Br(15, 9), Br(17, 9), Br(27, 9), Br(29, 9), Br(2, 8), Br(4, 8), Br(6, 8), Br(14, 8), Br(16, 8), Br(18, 8), Br(26, 8), Br(28, 8), Br(30, 8), },
            /* LEVEL 4 CODE */
            new int[70][] { Br(8, 21), Br(10, 21, MultiBrick.GREEN), Br(12, 21, MultiBrick.BLUE), Br(14, 21, MultiBrick.BLUE), Br(16, 21, MultiBrick.BLUE), Br(18, 21, MultiBrick.BLUE), Br(20, 21, MultiBrick.BLUE), Br(22, 21, MultiBrick.GREEN), Br(24, 21), Br(8, 20), Br(10, 20, MultiBrick.GREEN), Br(12, 20, MultiBrick.BLUE), Br(20, 20, MultiBrick.BLUE), Br(22, 20, MultiBrick.GREEN), Br(24, 20), Br(8, 19), Br(10, 19, MultiBrick.GREEN), Br(12, 19, MultiBrick.BLUE), Br(20, 19, MultiBrick.BLUE), Br(22, 19, MultiBrick.GREEN), Br(24, 19), Br(8, 18), Br(10, 18, MultiBrick.GREEN), Br(12, 18, MultiBrick.BLUE), Br(16, 18, MultiBrick.GREEN), Br(20, 18, MultiBrick.BLUE), Br(22, 18, MultiBrick.GREEN), Br(24, 18), Br(8, 17), Br(10, 17, MultiBrick.GREEN), Br(12, 17, MultiBrick.BLUE), Br(16, 17, MultiBrick.GREEN), Br(20, 17, MultiBrick.BLUE), Br(22, 17, MultiBrick.GREEN), Br(24, 17), Br(8, 16), Br(10, 16, MultiBrick.GREEN), Br(12, 16, MultiBrick.GREY), Br(16, 16, MultiBrick.GREEN), Br(20, 16, MultiBrick.GREY), Br(22, 16, MultiBrick.GREEN), Br(24, 16), Br(8, 15), Br(10, 15, MultiBrick.GREEN), Br(12, 15, MultiBrick.GREY), Br(16, 15, MultiBrick.GREEN), Br(20, 15, MultiBrick.GREY), Br(22, 15, MultiBrick.GREEN), Br(24, 15), Br(8, 14), Br(10, 14, MultiBrick.GREEN), Br(12, 14, MultiBrick.GREY), Br(16, 14, MultiBrick.GREEN), Br(20, 14, MultiBrick.GREY), Br(22, 14, MultiBrick.GREEN), Br(24, 14), Br(8, 13), Br(10, 13, MultiBrick.GREY), Br(12, 13, MultiBrick.GREY), Br(16, 13, MultiBrick.GREEN), Br(20, 13, MultiBrick.GREY), Br(22, 13, MultiBrick.GREY), Br(24, 13), Br(8, 12), Br(10, 12, MultiBrick.GREY), Br(12, 12, MultiBrick.GREY), Br(16, 12, MultiBrick.GREEN), Br(20, 12, MultiBrick.GREY), Br(22, 12, MultiBrick.GREY), Br(24, 12), }
        };
    /* END AUTO GENERATED CODE */

    public const string GAME_PROGRESS = "GameProgress";
    public static string LEVEL_SCORE (int level) { return "Level_" + level + "_Score"; }
    public static string LEVEL_HIGHSCORE (int level) { return "Level_" + level + "_HighScore"; }

    public static bool isSet {
        get { return PlayerPrefs.HasKey(GAME_PROGRESS); }
    }
    public static int completedLevels {
        get { 
            if (!isSet) PlayerPrefs.SetInt(GAME_PROGRESS, 0);
            return PlayerPrefs.GetInt(GAME_PROGRESS);
        }
        set { PlayerPrefs.SetInt(GAME_PROGRESS, value); }
    }
    public static int getScore (int level, bool highScore = false) {
        string STRING = "Level_" + level;
        STRING += (highScore) ? "_HighScore" : "_Score";
        return PlayerPrefs.GetInt(STRING);
    }
    public static void setScore (int level, int score) {
        PlayerPrefs.SetInt("Level_" + level + "_Score", score);
        if(score > getScore(level)) PlayerPrefs.SetInt("Level_" + level + "_HighScore", score);
    }
    public static int getTotalScore {
        get {
            int total = 0;
            for (int i = 0; i <= levelMap.Length; i++) { total += getScore(i + 1); }
            return total;
        }
    }
    //
    // Summary:
    //     ///
    //     Creates and formats brick data for the map array
    //     ///
    //
    // Parameters:
    //   x:
    //
    //   y:
    //
    //   color:
    //
    //   powerUp:
    public static int[] Br(int x, int y, string color = MultiBrick.RED, string powerUp = PowerUp.NONE) {
        return new int[4] { x, y, BT(color), BP(powerUp) };
    }
    //
    // Summary:
    //     ///
    //     Returns BrickType as int
    //     ///
    //
    // Parameters:
    //   typeStr:
    static int BT(string typeStr) {
        return typeStr == MultiBrick.GREEN ? 1 :
               typeStr == MultiBrick.BLUE ? 2 :
               typeStr == MultiBrick.GREY ? 3 : 0;
    }
    //
    // Summary:
    //     ///
    //     Returns BrickPower as integer
    //     ///
    //
    // Parameters:
    //   powStr:
    static int BP(string powStr) {
        return powStr == PowerUp.SPEED ? 1 :
               powStr == PowerUp.POWER ? 2 :
               powStr == PowerUp.PADDLE_GROW ? 3 :
               powStr == PowerUp.PADDLE_SHRINK ? 4 :
               powStr == PowerUp.MULTI_BALL ? 5 : 0;
    }
}
